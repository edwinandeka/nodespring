{"version":3,"sources":["../../src/decorators/service.js"],"names":["Service","serviceClass","basePackagePath","path","dirname","nodeSpringUtil","getStack","replace","ModuleContainer","appDir","packagePath","name","moduleType","addService"],"mappings":";;;;;QAUgBA,O,GAAAA,O;;AALhB;;;;AACA;;;;AACA;;;;;;AAGO,SAASA,OAAT,CAAiBC,YAAjB,EAA+B;AACpC,MAAIC,kBAAkBC,eAAKC,OAAL,CAAaC,yBAAeC,QAAf,GAA0BC,OAA1B,CAAkCC,0BAAgBC,MAAlD,EAA0D,EAA1D,EAA8DF,OAA9D,CAAsE,KAAtE,EAA6E,EAA7E,CAAb,CAAtB;AACA,MAAIG,cAAcR,kBAAkB,GAAlB,GAAwBD,aAAaU,IAAvD;;AAEAV,eAAaS,WAAb,GAA2BT,aAAaS,WAAb,IAA4BA,WAAvD;AACAT,eAAaW,UAAb,GAA0B,SAA1B;;AAEAJ,4BAAgBK,UAAhB,CAA2BZ,YAA3B;AACD,C,CAlBD","file":"service.js","sourcesContent":["/**\n * Service decorator\n * @author calbertts\n */\n\nimport ModuleContainer from '../core/ModuleContainer'\nimport nodeSpringUtil from '../core/nodeSpringUtil'\nimport path from 'path'\n\n\nexport function Service(serviceClass) {\n  let basePackagePath = path.dirname(nodeSpringUtil.getStack().replace(ModuleContainer.appDir, '').replace('.js', ''))\n  let packagePath = basePackagePath + '/' + serviceClass.name\n\n  serviceClass.packagePath = serviceClass.packagePath || packagePath\n  serviceClass.moduleType = 'service'\n\n  ModuleContainer.addService(serviceClass)\n}\n"]}