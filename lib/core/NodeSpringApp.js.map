{"version":3,"sources":["../../src/core/NodeSpringApp.js"],"names":["NodeSpringApp","config","global","NodeSpringConfig","printExceptions","requiredMethods","bindURL","getRequestParams","setContentTypeResponse","sendJSONResponse","sendDataResponse","addSocketListeners","methodName","undefined","noImplementedMethod","NodeSpringException","__proto__","constructor","name","nodeSpringUtil","throwNodeSpringException","methodParams","implementedMethodParams","getArgs","forEach","officialParam","indexOf","missingParameter","ModuleContainer","init","classDir","implConfig","logging","loggingSync","debugging","loadModules","Abstract"],"mappings":";;;;;;;;;AAKA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eARA;;;;;IAWqBA,a;;;AAEnB,yBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAElB,UAAKA,MAAL,GAAcA,MAAd;;AAEA;AACA,QAAG,CAACC,OAAOC,gBAAX,EAA6B;AAC3BD,aAAOC,gBAAP,GAA0B,EAA1B;AACD;;AAEDD,WAAOC,gBAAP,CAAwBC,eAAxB,GAA0C,IAA1C;;AAEA;AACA,QAAIC,kBAAkB;AACpBC,eAAS,CAAC,QAAD,EAAW,KAAX,EAAkB,UAAlB,CADW;AAEpBC,wBAAkB,CAAC,SAAD,EAAY,UAAZ,CAFE;AAGpBC,8BAAwB,CAAC,UAAD,EAAa,aAAb,CAHJ;AAIpBC,wBAAkB,CAAC,UAAD,EAAa,MAAb,CAJE;AAKpBC,wBAAkB,CAAC,UAAD,EAAa,MAAb,CALE;AAMpBC,0BAAoB,CAAC,WAAD,EAAc,iBAAd,EAAiC,UAAjC;AANA,KAAtB;;AAZkB,+BAqBVC,UArBU;AAsBhB,UAAG,MAAKA,UAAL,MAAqBC,SAAxB,EAAmC;AACjC,YAAIC,sBAAsB,IAAIC,6BAAJ,CAAwB,gBAAgBH,UAAhB,GAA6B,0BAA7B,GAA0D,MAAKI,SAAL,CAAeA,SAAf,CAAyBC,WAAzB,CAAqCC,IAAvH,CAA1B;;AAEAC,iCAAeC,wBAAf,CAAwCN,mBAAxC;AACD,OAJD,MAIO;AACL,YAAIO,eAAehB,gBAAgBO,UAAhB,CAAnB;;AAEA;AACA,YAAIU,0BAA0BH,yBAAeI,OAAf,CAAuB,MAAKX,UAAL,CAAvB,CAA9B;;AAEAS,qBAAaG,OAAb,CAAqB,UAACC,aAAD,EAAmB;AACtC,cAAGH,wBAAwBI,OAAxB,CAAgCD,aAAhC,IAAiD,CAApD,EAAuD;AACrD,gBAAIE,mBAAmB,IAAIZ,6BAAJ,CAAwB,oBAAoBU,aAApB,GAAoC,8CAApC,GAAqFb,UAArF,GAAkG,sBAAlG,GAA2H,MAAKI,SAAL,CAAeA,SAAf,CAAyBC,WAAzB,CAAqCC,IAAxL,EAA8LL,SAA9L,EAAyM,CAAzM,CAAvB;AACAM,qCAAeC,wBAAf,CAAwCO,gBAAxC;AACD;AACF,SALD;AAMD;AAtCe;;AAqBlB,SAAI,IAAIf,UAAR,IAAsBP,eAAtB,EAAuC;AAAA,YAA/BO,UAA+B;AAkBtC;AAvCiB;AAwCnB;;;;4BAEO;AACNgB,gCAAgBC,IAAhB,CAAqB,KAAK5B,MAAL,CAAY6B,QAAjC,EAA2C,IAA3C,EAAiD,KAAK7B,MAAL,CAAY8B,UAA7D,EAAyE,KAAK9B,MAAL,CAAY+B,OAArF,EAA8F,KAAK/B,MAAL,CAAYgC,WAA1G,EAAuH,KAAKhC,MAAL,CAAYiC,SAAnI;AACAN,gCAAgBO,WAAhB;AACD;;;;EA/CwCC,kB;;kBAAtBpC,a","file":"NodeSpringApp.js","sourcesContent":["/**\n * NodeSpringApp\n * @author calbertts\n */\n\nimport ModuleContainer from './ModuleContainer'\nimport Abstract from './Abstract'\nimport nodeSpringUtil from './nodeSpringUtil'\nimport NodeSpringException from '../exceptions/NodeSpringException'\n\n\nexport default class NodeSpringApp extends Abstract {\n\n  constructor(config) {\n    super()\n    this.config = config\n\n    // Global settings\n    if(!global.NodeSpringConfig) {\n      global.NodeSpringConfig = {}\n    }\n\n    global.NodeSpringConfig.printExceptions = true\n\n    // Checking methods that need to be implemented\n    let requiredMethods = {\n      bindURL: ['method', 'url', 'callback'],\n      getRequestParams: ['request', 'callback'],\n      setContentTypeResponse: ['response', 'contentType'],\n      sendJSONResponse: ['response', 'data'],\n      sendDataResponse: ['response', 'data'],\n      addSocketListeners: ['namespace', 'socketListeners', 'instance']\n    }\n\n    for(let methodName in requiredMethods) {\n      if(this[methodName] === undefined) {\n        let noImplementedMethod = new NodeSpringException('The method ' + methodName + ' must be implemented on ' + this.__proto__.__proto__.constructor.name)\n\n        nodeSpringUtil.throwNodeSpringException(noImplementedMethod)\n      } else {\n        let methodParams = requiredMethods[methodName]\n\n        // Check the parameters\n        let implementedMethodParams = nodeSpringUtil.getArgs(this[methodName])\n\n        methodParams.forEach((officialParam) => {\n          if(implementedMethodParams.indexOf(officialParam) < 0) {\n            let missingParameter = new NodeSpringException('The parameter \"' + officialParam + '\" is not present on the implemented method \"' + methodName + '(...)\" in the class ' + this.__proto__.__proto__.constructor.name, undefined, 6)\n            nodeSpringUtil.throwNodeSpringException(missingParameter)\n          }\n        })\n      }\n    }\n  }\n\n  start() {\n    ModuleContainer.init(this.config.classDir, this, this.config.implConfig, this.config.logging, this.config.loggingSync, this.config.debugging)\n    ModuleContainer.loadModules()\n  }\n}"]}